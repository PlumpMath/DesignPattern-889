package proxy_pattern;

/*
 * 代理类和真实类都会实现接口，在客户端调用的时候，只需要调用代理类的方法即可。
 * 由代理类去决定这个方法分配给哪个真实类去解决，
 * 另外，代理类还可以对真实类的结果进行封装。
 * ORM应该就是一个代理模式（未证实）
 * 
 * 网上说的常用场景，还没有切身体会
 * 一个对象，比如一幅很大的图像，需要载入的时间很长。　　　　

　　一个需要很长时间才可以完成的计算结果，并且需要在它计算过程中显示中间结果

　　一个存在于远程计算机上的对象，需要通过网络载入这个远程对象则需要很长时间，特别是在网络传输高峰期。

　　一个对象只有有限的访问权限，代理模式(Proxy)可以验证用户的权限
 */
public class App {
	public static void main(String[] args){
		Leader leader = new Leader(new WorkerB());
		leader.solveProblem();
	}
}
